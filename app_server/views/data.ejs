<!DOCTYPE html>
<html lang="en-us">
	<head prefix="og: http://ogp.me/ns/website#">
<% include meta-tags.ejs %>
		<link rel="stylesheet" href="<%= meta.url_base %>/css/style-data.min.css">
		<script src="<%= meta.url_base %>/node_modules/react/react.min.js"></script>
		<script src="<%= meta.url_base %>/node_modules/react-dom/react-dom.min.js"></script>
		<script src="<%= meta.url_base %>/node_modules/d3/d3.min.js"></script>
<% include google-tag-manager-1.ejs %>
	</head>








	<body class="data">
<% include google-tag-manager-2.ejs %>
		<div id="page-container">
<% include header.ejs %>
			<div id="content">
				<section id="intro" class="bg-dark height-half">
					<div class="container">
						<h1>A <a href="">#SmartCreative</a> is analytically smart. He is comfortable with data and can use it to make decisions &hellip; but doesn't let it take over.</h1>

						<div class="branding">
							<a href="<%= meta.url_base %>/"><img src="/img/logo-mm-pms2028c-cutout.svg" class="logo-mm" alt="Hybrid thinker + doer | Michael Mallari, MBA, CSPO, CSM" title="Hybrid thinker + doer | Michael Mallari, MBA, CSPO, CSM"></a>

							<h2>Michael Mallari, MBA, CSPO, CSM</h2>
							<h3>Hybrid thinker + doer</h3>
						</div>
					</div>
				</section>








				<section id="principles" class="height-3-4 skew-outer">
					<div class="container skew-inner">
						<div >
							<span class="tag">Principles</span>
							<h2>Calculated risk taking to risk taking.</h2>
							<p>Value data. Analyze data. Be sketical when metrics and anecdote differ. But do them in a time-boxed manner (and move forward) since most decisions and actions are reversible.</p>
						</div>
					</div>
				</section>
			</div>
<!--/#page-container > #content -->








<% include footer.ejs %>
		</div>
<!--/#page-container -->








		<script src="<%= meta.url_base %>/node_modules/jquery/jquery.min.js"></script>
		<script src="<%= meta.url_base %>/node_modules/bootstrap/js/bootstrap.min.js"></script>
		<script src="<%= meta.url_base %>/js/functions.min.js"></script>
		<script type="text/javascript">
			var mountTarget = document.getElementById('d3-app');
			var Post = React.createClass({
				propTypes: {
					user: React.PropTypes.string.isRequired,
					content: React.PropTypes.string.isRequired,
					id: React.PropTypes.number.isRequired,
				},
				render: function() {
					return (
						React.createElement('div',
							{ className: 'post' },
							React.createElement('h2',
								{ className: 'postAuthor', id: this.props.id },
								this.props.user, React.createElement('span',
									{ className: 'postBody' },
									this.props.content
								)
							),
							this.props.children
						)
					);
				}
			});

			var Comment = React.createClass({
			propTypes: {
			id: React.PropTypes.number.isRequired,
			content: React.PropTypes.string.isRequired,
			user: React.PropTypes.string.isRequired,
			},
			render: function() {
			return (
			React.createElement('div', {
			className: 'comment'
			},
			React.createElement('h2', {
			className: 'commentAuthor'
			},
			this.props.user,
			React.createElement('span', {
			className: 'commentContent'
			},
			this.props.content
			)
			)
			)
			);
			}
			});

			var App = React.createElement(Post, {
			id: 1,
			content: " said: This is a post!",
			user: 'mark',
			},
			React.createElement(Comment, {
			id: 2,
			user: 'bob',
			content: " commented: wow! how cool!"
			})
			);

			ReactDOM.render(App, mountTarget);
		</script>
		<script>
			$(document).ready(function() {
				$('.vertical-middle').css({
					'margin-top' : function() { return -$(this).outerHeight() / 2; }
				});
			});
		</script>
	</body>
</html>
